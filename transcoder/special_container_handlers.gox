package transcoder

import (
	"fmt"
	"strconv"

	"github.com/AlbinoDrought/creamy-transcode/format"
	"github.com/AlbinoDrought/creamy-transcode/superoutput"
)

type specialContainerHandler func(output *superoutput.SuperOutput) [][]string

var specialContainerHandlers = map[string]specialContainerHandler{
	"jpg": dumpSingleJPG,
	"png": dumpSinglePNG,
}

// actually it seems like ffmpeg should be able to handle all of this automagically....
func dumpSingleThumbnail(base []string, output *superoutput.SuperOutput) []string {
	base = append(base, "-y", "-hide_banner", "-frames:v", "1")

	vf := "thumbnail"
	if format.VideoSpecs.ResolutionHeight != 0 || format.VideoSpecs.ResolutionWidth != 0 {
		height := format.VideoSpecs.ResolutionHeight
		width := format.VideoSpecs.ResolutionWidth

		// -1 signifies automatic in ffmpeg
		if height == 0 {
			height = -1
		} else if width == 0 {
			width = -1
		}

		vf += fmt.Sprintf(",scale=%d:%d", width, height)
	}

	base = append(base, "-vf", vf)

	return base
}

func dumpThumbnails(base []string, output *superoutput.SuperOutput) [][]string {
	commands := [][]string{}

	if output.ThumbnailOptions.Every != 0 {
		duration, _ := strconv.Atoi(output.SourceMediaInfo.Duration)
		for i := 0; i < duration; i += otuput.ThumbnailOptions.Every {

		}
	}

	return commands
}

func dumpSingleJPG(output *superoutput.SuperOutput) [][]string {
	return [][]string{
		dumpSingleThumbnail(
			[]string{"-f", "singlejpeg"},
			format,
		),
	}
}

func dumpSinglePNG(output *superoutput.SuperOutput) [][]string {
	return [][]string{
		dumpSingleThumbnail(
			[]string{"-c:v", "png"},
			format,
		),
	}
}
